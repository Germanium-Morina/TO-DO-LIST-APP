{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nfunction useVerticalScrollbar(ref) {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [showScrollbar, setShowScrollbar] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isThumbHovered, setIsThumbHovered] = useState(false);\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n    const track = element.parentElement.querySelector(\".scrollbar-container\");\n    const thumb = element.parentElement.querySelector(\".scrollbar-thumb\");\n    if (!track || !thumb) {\n      console.error(\"Scrollbar elements not found\");\n      return;\n    }\n    const updateScrollbar = () => {\n      const {\n        scrollHeight,\n        clientHeight\n      } = element;\n      if (scrollHeight > clientHeight) {\n        setShowScrollbar(true);\n        const thumbHeight = Math.max(clientHeight / scrollHeight * clientHeight, 30);\n        thumb.style.height = `${thumbHeight}px`;\n      } else {\n        setShowScrollbar(false);\n      }\n    };\n    const handleScroll = () => {\n      const {\n        scrollHeight,\n        clientHeight,\n        scrollTop\n      } = element;\n      const thumbHeight = Math.max(clientHeight / scrollHeight * clientHeight, 30);\n      const thumbTop = scrollTop / (scrollHeight - clientHeight) * (track.offsetHeight - thumbHeight);\n      thumb.style.top = `${thumbTop}px`;\n    };\n    const handleTrackClick = event => {\n      const rect = track.getBoundingClientRect();\n      const clickY = event.clientY - rect.top;\n      const thumbHeight = thumb.offsetHeight;\n      const newScrollTop = (clickY - thumbHeight / 2) / (track.offsetHeight - thumbHeight) * (element.scrollHeight - element.clientHeight);\n      element.scrollTop = newScrollTop;\n      handleScroll();\n    };\n    const handleThumbMouseDown = event => {\n      setIsDragging(true);\n      track.classList.add(\"scrollbar-active\");\n      thumb.classList.add(\"scrollbar-active\");\n      const startY = event.clientY;\n      const startScrollTop = element.scrollTop;\n      const handleMouseMove = e => {\n        const deltaY = e.clientY - startY;\n        const scrollPercentage = deltaY / (track.offsetHeight - thumb.offsetHeight);\n        element.scrollTop = startScrollTop + scrollPercentage * (element.scrollHeight - element.clientHeight);\n        handleScroll();\n      };\n      const handleMouseUp = () => {\n        setIsDragging(false);\n        track.classList.remove(\"scrollbar-active\");\n        thumb.classList.remove(\"scrollbar-active\");\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n      };\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n      event.preventDefault();\n    };\n    const handleMouseEnter = () => {\n      setIsHovered(true);\n      updateScrollbar();\n    };\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n    };\n    const handleThumbMouseEnter = () => {\n      setIsThumbHovered(true);\n    };\n    const handleThumbMouseLeave = () => {\n      setIsThumbHovered(false);\n    };\n    thumb.addEventListener(\"mousedown\", handleThumbMouseDown);\n    track.addEventListener(\"click\", handleTrackClick);\n    element.addEventListener(\"scroll\", handleScroll);\n    element.addEventListener(\"mouseenter\", handleMouseEnter);\n    element.addEventListener(\"mouseleave\", handleMouseLeave);\n    thumb.addEventListener(\"mouseenter\", handleThumbMouseEnter);\n    thumb.addEventListener(\"mouseleave\", handleThumbMouseLeave);\n\n    // Initialize scrollbar\n    updateScrollbar();\n\n    // Cleanup\n    return () => {\n      thumb.removeEventListener(\"mousedown\", handleThumbMouseDown);\n      track.removeEventListener(\"click\", handleTrackClick);\n      element.removeEventListener(\"scroll\", handleScroll);\n      element.removeEventListener(\"mouseenter\", handleMouseEnter);\n      element.removeEventListener(\"mouseleave\", handleMouseLeave);\n      thumb.removeEventListener(\"mouseenter\", handleThumbMouseEnter);\n      thumb.removeEventListener(\"mouseleave\", handleThumbMouseLeave);\n    };\n  }, [ref, isDragging]);\n  return {\n    isDragging,\n    showScrollbar,\n    isHovered,\n    isThumbHovered\n  };\n}\n_s(useVerticalScrollbar, \"9V3XsKpKET3taWfSF/p4wGOD9jc=\");\nexport default useVerticalScrollbar;","map":{"version":3,"names":["useEffect","useState","useVerticalScrollbar","ref","_s","isDragging","setIsDragging","showScrollbar","setShowScrollbar","isHovered","setIsHovered","isThumbHovered","setIsThumbHovered","element","current","track","parentElement","querySelector","thumb","console","error","updateScrollbar","scrollHeight","clientHeight","thumbHeight","Math","max","style","height","handleScroll","scrollTop","thumbTop","offsetHeight","top","handleTrackClick","event","rect","getBoundingClientRect","clickY","clientY","newScrollTop","handleThumbMouseDown","classList","add","startY","startScrollTop","handleMouseMove","e","deltaY","scrollPercentage","handleMouseUp","remove","document","removeEventListener","addEventListener","preventDefault","handleMouseEnter","handleMouseLeave","handleThumbMouseEnter","handleThumbMouseLeave"],"sources":["C:/xampp/htdocs/TO-DO-LIST-APP/front-end/src/Components/Scrollbars/useVerticalScrollbar.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction useVerticalScrollbar(ref) {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [showScrollbar, setShowScrollbar] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isThumbHovered, setIsThumbHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const track = element.parentElement.querySelector(\".scrollbar-container\");\r\n    const thumb = element.parentElement.querySelector(\".scrollbar-thumb\");\r\n\r\n    if (!track || !thumb) {\r\n      console.error(\"Scrollbar elements not found\");\r\n      return;\r\n    }\r\n\r\n    const updateScrollbar = () => {\r\n      const { scrollHeight, clientHeight } = element;\r\n\r\n      if (scrollHeight > clientHeight) {\r\n        setShowScrollbar(true);\r\n        const thumbHeight = Math.max(\r\n          (clientHeight / scrollHeight) * clientHeight,\r\n          30\r\n        );\r\n        thumb.style.height = `${thumbHeight}px`;\r\n      } else {\r\n        setShowScrollbar(false);\r\n      }\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const { scrollHeight, clientHeight, scrollTop } = element;\r\n\r\n      const thumbHeight = Math.max(\r\n        (clientHeight / scrollHeight) * clientHeight,\r\n        30\r\n      );\r\n      const thumbTop =\r\n        (scrollTop / (scrollHeight - clientHeight)) *\r\n        (track.offsetHeight - thumbHeight);\r\n      thumb.style.top = `${thumbTop}px`;\r\n    };\r\n\r\n    const handleTrackClick = (event) => {\r\n      const rect = track.getBoundingClientRect();\r\n      const clickY = event.clientY - rect.top;\r\n      const thumbHeight = thumb.offsetHeight;\r\n\r\n      const newScrollTop =\r\n        ((clickY - thumbHeight / 2) / (track.offsetHeight - thumbHeight)) *\r\n        (element.scrollHeight - element.clientHeight);\r\n\r\n      element.scrollTop = newScrollTop;\r\n      handleScroll();\r\n    };\r\n\r\n    const handleThumbMouseDown = (event) => {\r\n      setIsDragging(true);\r\n      track.classList.add(\"scrollbar-active\");\r\n      thumb.classList.add(\"scrollbar-active\");\r\n\r\n      const startY = event.clientY;\r\n      const startScrollTop = element.scrollTop;\r\n\r\n      const handleMouseMove = (e) => {\r\n        const deltaY = e.clientY - startY;\r\n        const scrollPercentage =\r\n          deltaY / (track.offsetHeight - thumb.offsetHeight);\r\n        element.scrollTop =\r\n          startScrollTop +\r\n          scrollPercentage * (element.scrollHeight - element.clientHeight);\r\n        handleScroll();\r\n      };\r\n\r\n      const handleMouseUp = () => {\r\n        setIsDragging(false);\r\n        track.classList.remove(\"scrollbar-active\");\r\n        thumb.classList.remove(\"scrollbar-active\");\r\n        document.removeEventListener(\"mousemove\", handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", handleMouseUp);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n      event.preventDefault();\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n      setIsHovered(true);\r\n      updateScrollbar();\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      setIsHovered(false);\r\n    };\r\n\r\n    const handleThumbMouseEnter = () => {\r\n      setIsThumbHovered(true);\r\n    };\r\n\r\n    const handleThumbMouseLeave = () => {\r\n      setIsThumbHovered(false);\r\n    };\r\n\r\n    thumb.addEventListener(\"mousedown\", handleThumbMouseDown);\r\n    track.addEventListener(\"click\", handleTrackClick);\r\n    element.addEventListener(\"scroll\", handleScroll);\r\n    element.addEventListener(\"mouseenter\", handleMouseEnter);\r\n    element.addEventListener(\"mouseleave\", handleMouseLeave);\r\n    thumb.addEventListener(\"mouseenter\", handleThumbMouseEnter);\r\n    thumb.addEventListener(\"mouseleave\", handleThumbMouseLeave);\r\n\r\n    // Initialize scrollbar\r\n    updateScrollbar();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      thumb.removeEventListener(\"mousedown\", handleThumbMouseDown);\r\n      track.removeEventListener(\"click\", handleTrackClick);\r\n      element.removeEventListener(\"scroll\", handleScroll);\r\n      element.removeEventListener(\"mouseenter\", handleMouseEnter);\r\n      element.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n      thumb.removeEventListener(\"mouseenter\", handleThumbMouseEnter);\r\n      thumb.removeEventListener(\"mouseleave\", handleThumbMouseLeave);\r\n    };\r\n  }, [ref, isDragging]);\r\n\r\n  return { isDragging, showScrollbar, isHovered, isThumbHovered };\r\n}\r\n\r\nexport default useVerticalScrollbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}