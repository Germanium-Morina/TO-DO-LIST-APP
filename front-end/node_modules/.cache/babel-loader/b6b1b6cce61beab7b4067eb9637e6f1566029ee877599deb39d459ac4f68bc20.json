{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nfunction useHorizontalScrollbar(ref) {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n    const track = element.parentElement.querySelector(\".horizontal-scrollbar-container\");\n    const thumb = element.parentElement.querySelector(\".horizontal-scrollbar-thumb\");\n    const verticalScrollbarWidth = 10;\n    if (!track || !thumb) {\n      console.error(\"Horizontal scrollbar elements not found\");\n      return;\n    }\n    const handleScroll = () => {\n      const {\n        scrollWidth,\n        clientWidth,\n        scrollLeft\n      } = element;\n      track.style.width = `${clientWidth - verticalScrollbarWidth}px`;\n      const thumbWidth = Math.max(clientWidth / scrollWidth * track.offsetWidth, 30);\n      thumb.style.width = `${thumbWidth}px`;\n      const thumbLeft = scrollLeft / (scrollWidth - clientWidth) * (track.offsetWidth - thumbWidth);\n      thumb.style.left = `${thumbLeft}px`;\n      if (scrollWidth > clientWidth) {\n        track.style.opacity = \"1\";\n        track.style.visibility = \"visible\";\n        track.style.pointerEvents = \"auto\";\n      } else {\n        track.style.opacity = \"0\";\n        track.style.visibility = \"hidden\";\n        track.style.pointerEvents = \"none\";\n      }\n    };\n    const handleTrackClick = event => {\n      const rect = track.getBoundingClientRect();\n      const clickX = event.clientX - rect.left;\n      const thumbWidth = thumb.offsetWidth;\n      const newScrollLeft = (clickX - thumbWidth / 2) / (track.offsetWidth - thumbWidth) * (element.scrollWidth - element.clientWidth);\n      element.scrollLeft = newScrollLeft;\n      handleScroll();\n    };\n    const handleThumbMouseDown = event => {\n      setIsDragging(true);\n      track.classList.add(\"scrollbar-active\");\n      thumb.classList.add(\"scrollbar-active\", \"dragging\");\n      const startX = event.clientX;\n      const startScrollLeft = element.scrollLeft;\n      const handleMouseMove = e => {\n        const deltaX = e.clientX - startX;\n        const scrollPercentage = deltaX / (track.offsetWidth - thumb.offsetWidth);\n        element.scrollLeft = startScrollLeft + scrollPercentage * (element.scrollWidth - element.clientWidth);\n        handleScroll();\n      };\n      const handleMouseUp = () => {\n        setIsDragging(false);\n        track.classList.remove(\"scrollbar-active\");\n        thumb.classList.remove(\"scrollbar-active\", \"dragging\");\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        if (!element.matches(\":hover\")) {\n          track.style.opacity = \"0\";\n          track.style.visibility = \"hidden\";\n          track.style.pointerEvents = \"none\";\n        }\n      };\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n      event.preventDefault();\n    };\n    const handleMouseEnter = () => {\n      if (element.scrollWidth > element.clientWidth) {\n        track.style.opacity = \"1\";\n        track.style.visibility = \"visible\";\n        track.style.pointerEvents = \"auto\";\n      }\n    };\n    const handleMouseLeave = () => {\n      if (!isDragging) {\n        track.style.opacity = \"0\";\n        track.style.visibility = \"hidden\";\n        track.style.pointerEvents = \"none\";\n      }\n    };\n    thumb.addEventListener(\"mousedown\", handleThumbMouseDown);\n    track.addEventListener(\"click\", handleTrackClick);\n    element.addEventListener(\"scroll\", handleScroll);\n    element.parentElement.addEventListener(\"mouseenter\", handleMouseEnter);\n    element.parentElement.addEventListener(\"mouseleave\", handleMouseLeave);\n    handleScroll();\n    return () => {\n      thumb.removeEventListener(\"mousedown\", handleThumbMouseDown);\n      track.removeEventListener(\"click\", handleTrackClick);\n      element.removeEventListener(\"scroll\", handleScroll);\n      element.parentElement.removeEventListener(\"mouseenter\", handleMouseEnter);\n      element.parentElement.removeEventListener(\"mouseleave\", handleMouseLeave);\n    };\n  }, [ref, isDragging]);\n  return {\n    isDragging\n  };\n}\n_s(useHorizontalScrollbar, \"zjq2sSup4GXUtmqwnFzGU3LD3go=\");\nexport default useHorizontalScrollbar;","map":{"version":3,"names":["useEffect","useState","useHorizontalScrollbar","ref","_s","isDragging","setIsDragging","element","current","track","parentElement","querySelector","thumb","verticalScrollbarWidth","console","error","handleScroll","scrollWidth","clientWidth","scrollLeft","style","width","thumbWidth","Math","max","offsetWidth","thumbLeft","left","opacity","visibility","pointerEvents","handleTrackClick","event","rect","getBoundingClientRect","clickX","clientX","newScrollLeft","handleThumbMouseDown","classList","add","startX","startScrollLeft","handleMouseMove","e","deltaX","scrollPercentage","handleMouseUp","remove","document","removeEventListener","matches","addEventListener","preventDefault","handleMouseEnter","handleMouseLeave"],"sources":["C:/xampp/htdocs/TO-DO-LIST-APP/front-end/src/Components/Scrollbars/useHorizontalScrollbar.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction useHorizontalScrollbar(ref) {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const track = element.parentElement.querySelector(\r\n      \".horizontal-scrollbar-container\"\r\n    );\r\n    const thumb = element.parentElement.querySelector(\r\n      \".horizontal-scrollbar-thumb\"\r\n    );\r\n    const verticalScrollbarWidth = 10;\r\n\r\n    if (!track || !thumb) {\r\n      console.error(\"Horizontal scrollbar elements not found\");\r\n      return;\r\n    }\r\n\r\n    const handleScroll = () => {\r\n      const { scrollWidth, clientWidth, scrollLeft } = element;\r\n\r\n      track.style.width = `${clientWidth - verticalScrollbarWidth}px`;\r\n\r\n      const thumbWidth = Math.max(\r\n        (clientWidth / scrollWidth) * track.offsetWidth,\r\n        30\r\n      );\r\n      thumb.style.width = `${thumbWidth}px`;\r\n\r\n      const thumbLeft =\r\n        (scrollLeft / (scrollWidth - clientWidth)) *\r\n        (track.offsetWidth - thumbWidth);\r\n      thumb.style.left = `${thumbLeft}px`;\r\n\r\n      if (scrollWidth > clientWidth) {\r\n        track.style.opacity = \"1\";\r\n        track.style.visibility = \"visible\";\r\n        track.style.pointerEvents = \"auto\";\r\n      } else {\r\n        track.style.opacity = \"0\";\r\n        track.style.visibility = \"hidden\";\r\n        track.style.pointerEvents = \"none\";\r\n      }\r\n    };\r\n\r\n    const handleTrackClick = (event) => {\r\n      const rect = track.getBoundingClientRect();\r\n      const clickX = event.clientX - rect.left;\r\n      const thumbWidth = thumb.offsetWidth;\r\n\r\n      const newScrollLeft =\r\n        ((clickX - thumbWidth / 2) / (track.offsetWidth - thumbWidth)) *\r\n        (element.scrollWidth - element.clientWidth);\r\n\r\n      element.scrollLeft = newScrollLeft;\r\n      handleScroll();\r\n    };\r\n\r\n    const handleThumbMouseDown = (event) => {\r\n      setIsDragging(true);\r\n      track.classList.add(\"scrollbar-active\");\r\n      thumb.classList.add(\"scrollbar-active\", \"dragging\");\r\n\r\n      const startX = event.clientX;\r\n      const startScrollLeft = element.scrollLeft;\r\n\r\n      const handleMouseMove = (e) => {\r\n        const deltaX = e.clientX - startX;\r\n        const scrollPercentage =\r\n          deltaX / (track.offsetWidth - thumb.offsetWidth);\r\n        element.scrollLeft =\r\n          startScrollLeft +\r\n          scrollPercentage * (element.scrollWidth - element.clientWidth);\r\n        handleScroll();\r\n      };\r\n\r\n      const handleMouseUp = () => {\r\n        setIsDragging(false);\r\n        track.classList.remove(\"scrollbar-active\");\r\n        thumb.classList.remove(\"scrollbar-active\", \"dragging\");\r\n        document.removeEventListener(\"mousemove\", handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", handleMouseUp);\r\n\r\n        if (!element.matches(\":hover\")) {\r\n          track.style.opacity = \"0\";\r\n          track.style.visibility = \"hidden\";\r\n          track.style.pointerEvents = \"none\";\r\n        }\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n      event.preventDefault();\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n      if (element.scrollWidth > element.clientWidth) {\r\n        track.style.opacity = \"1\";\r\n        track.style.visibility = \"visible\";\r\n        track.style.pointerEvents = \"auto\";\r\n      }\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      if (!isDragging) {\r\n        track.style.opacity = \"0\";\r\n        track.style.visibility = \"hidden\";\r\n        track.style.pointerEvents = \"none\";\r\n      }\r\n    };\r\n\r\n    thumb.addEventListener(\"mousedown\", handleThumbMouseDown);\r\n    track.addEventListener(\"click\", handleTrackClick);\r\n    element.addEventListener(\"scroll\", handleScroll);\r\n    element.parentElement.addEventListener(\"mouseenter\", handleMouseEnter);\r\n    element.parentElement.addEventListener(\"mouseleave\", handleMouseLeave);\r\n\r\n    handleScroll();\r\n\r\n    return () => {\r\n      thumb.removeEventListener(\"mousedown\", handleThumbMouseDown);\r\n      track.removeEventListener(\"click\", handleTrackClick);\r\n      element.removeEventListener(\"scroll\", handleScroll);\r\n      element.parentElement.removeEventListener(\"mouseenter\", handleMouseEnter);\r\n      element.parentElement.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n    };\r\n  }, [ref, isDragging]);\r\n\r\n  return { isDragging };\r\n}\r\n\r\nexport default useHorizontalScrollbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}